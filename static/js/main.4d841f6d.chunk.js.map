{"version":3,"sources":["redux/people-reducer.js","komponents/Aside/Aside.module.css","komponents/common/Button/Button.module.css","komponents/Messages/Messages.module.css","komponents/Profile/NewPost/NewPost.module.css","komponents/common/Preloader/Preloader.module.css","komponents/common/FormsControls/FormsControls.module.css","api/api.js","komponents/Messages/Chat/Chat.module.css","komponents/Login/Login.module.css","komponents/Profile/Posts/Post/Post.module.css","reportWebVitals.js","redux/profile-reducer.js","redux/messages-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-state.js","Icons/Message.svg","Icons/News.svg","Icons/Settings.svg","Icons/Music.svg","Icons/People.svg","komponents/Aside/Aside.jsx","komponents/News/News.jsx","komponents/Settings/Settings.jsx","komponents/Messages/Chat/Message/Message.jsx","komponents/common/FormsControls/FormsControls.jsx","utilits/validators/validators.js","komponents/common/Button/Button.jsx","komponents/Messages/Chat/AddMessageForm.jsx","komponents/Messages/Chat/Chat.jsx","komponents/Messages/Chat/ChatContainer.jsx","komponents/Messages/Dialog/Dialog.jsx","komponents/Messages/Messages.jsx","HOC/withAuthRedirect.js","komponents/Messages/MessagesContainer.jsx","komponents/Profile/NewPost/NewPost.jsx","komponents/Profile/NewPost/NewPostContainer.jsx","Icons/Avatar.jpg","Icons/like.svg","komponents/Profile/Posts/Post/Post.jsx","komponents/Profile/Posts/Posts.jsx","komponents/Profile/Posts/PostsContainer.jsx","komponents/Profile/Badge/ProfileStatus/ProfileStatus.jsx","komponents/Profile/Badge/ContactInfo/ContactInfo.jsx","komponents/Profile/Badge/Badge.jsx","komponents/Profile/Badge/BadgeContainer.jsx","komponents/Profile/Profile.jsx","komponents/Profile/ProfileContainer.jsx","Icons/Main-logo.svg","komponents/Header/UserAuthInfo/UserAuthInfo.jsx","komponents/Header/Header.jsx","komponents/Header/HeaderContainer.jsx","komponents/Login/Login.jsx","komponents/Login/LoginContainer.jsx","App.js","index.js","Icons/Profile.svg","komponents/Header/Header.module.css","komponents/Messages/Dialog/Dialog.module.css","Icons/download-anim.svg","komponents/common/Preloader/Preloader.jsx","komponents/Messages/Chat/Message/Message.module.css","komponents/Profile/Badge/Badge.module.css","utilits/help-functions/reducersHelpFunctions.js","komponents/Profile/Posts/Posts.module.css"],"names":["FOLLOW","UNFOLLOW","SET_PEOPLE","SET_PAGES_COUNT","SET_ACTIVE_PAGE","TOGGLE_IS_FETCHING","TOGGLE_DISABLED","initialState","peopleData","pageSize","totalPeopleCount","activePage","isFetching","disabled","accessFollow","id","type","accessUnfollow","setActivePage","value","toggleIsFetching","bool","toggleDisabled","getUsers","dispatch","a","usersAPI","response","people_data","items","count","totalCount","accessFollowUnfollow","apiMethod","actionCreator","data","resultCode","follow","followUser","unfollow","unfollowUser","peopleReducer","state","action","updateObject","followed","filter","module","exports","instance","axios","withCredentials","headers","baseURL","currentPage","get","then","delete","post","getUser","profileAPI","getStatus","updateStatus","status","put","uploadAvatar","ava","formData","FormData","append","updateContactInfo","profile","authAPI","authMe","getMe","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_NEW_POST","SET_USER_PROFILE","SET_STATUS","TOGGLE_CONTACTS_EDIT_MODE","UPLOAD_AVATAR_SUCCESS","postData","name","text","likes","contactsEditMode","setUserStatus","uploadAvatarSuccess","toggleContactsEditMode","toggleContactsEditModeSuccess","profileReducer","newPost","photos","SEND_MESSAGE","messagesData","lastMessageContext","lastMessageDate","unreadNum","chatData","date","sender","messagesReducer","message","SET_AUTH_USER_DATA","TOGGLE_IS_AUTH","SET_CARD","userId","isAuth","card","toggleIsAuth","setAuthUserData","setCard","responseGetMe","authReducer","TOGGLE_INITIALIZED","initialized","appReducer","reducers","combineReducers","profilePage","messagesPage","peoplePage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","Aside","className","s","sidebar","item","link","to","src","profileImage","ico","title","messageImage","newsImage","peopleImage","musicImage","settingsImage","News","props","Settings","Message","nameClass","myMessage","myMessageContainer","friendMessage","friendMessageContainer","messageContainer","TextareaNewPost","input","meta","hasError","touched","error","textareaContainer","textarea","textareaError","errorMessage","TextareaNewMessage","newMessageContainer","messageInput","TextareaProfileInfo","profileInfoContainer","profileInfo","Input","inputError","required","maxLength","length","Button","verticalPadding","horizontalPadding","button","style","paddingTop","paddingBottom","paddingLeft","paddingRight","maxLength100","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","Field","component","validate","placeholder","sendButton","Chat","messages","map","p","dete","chatSection","head","headItem","backLink","companionName","companionAva","baseAva","chatContainer","updateWithNewMessage","connect","sendMessage","reset","Dialog","counterUnread","counterUnread_active","container","personal","preview","lastMessage","Messages","messagesItem","d","mapStateToPropsForRedirect","compose","Component","RedirectComponent","this","React","maxLength1000","NewPostReduxForm","updateWithNewPost","addPost","newPostText","Post","info","author","content","feedback","like","likeCounter","Posts","postElements","posts","PostsContainer","ProfileStatus","useState","editMode","setEditMode","setStatus","activateEditMode","useEffect","isOwner","autoFocus","onBlur","inputStatus","onChange","e","currentTarget","onClick","Contact","contactLabel","contactContainer","itemPoint","itemInput","ContactInfoForm","infoContainer","Object","keys","contacts","key","checkboxProfileInfo","checkboxDescription","aboutMeLabel","aboutMeTextarea","buttonSubmitContainer","Badge","memo","scrollTo","httpConcater","badge","avaContainer","large","htmlFor","addAvaLabel","addAva","target","files","fullName","initialValues","onSubmitContacts","contactTitle","contactValue","lookingForAJobDescription","aboutMe","changeProfileButton","preloaderContainer","Preloader","height","links","href","getState","parseError","stopSubmit","Profile","myProfileId","withRouter","updateComponent","match","params","UserAuthInfo","toggleEditMode","userInfo","onMouseEnter","onMouseLeave","userAva","small","Header","header","mainLogo","alt","img","loginBlock","HeaderContainer","LoginReduxForm","loginForm","rememberMeInputContainer","rememberMeCheckbox","rememberMeText","buttonContainer","_error","loginWrapper","PeopleContainer","lazy","App","initialize","path","render","exact","MessagesContainer","ChatContainer","Suspense","fallback","AppContainer","promise","Promise","all","GlobalApp","ReactDOM","document","getElementById","preloader","actionValue","objPropName","valueObj","u","errorContent","result","isInContacts","firstBracket","indexOf","i","includes","arrowPosition","toLowerCase","counter","secondBracket","object"],"mappings":"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","file":"static/js/main.4d841f6d.chunk.js","sourcesContent":["import {usersAPI} from \"../api/api\";\r\nimport {updateObject} from \"../utilits/help-functions/reducersHelpFunctions\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_PEOPLE = \"SET_PEOPLE\";\r\nconst SET_PAGES_COUNT = \"SET_PAGES_COUNT\";\r\nconst SET_ACTIVE_PAGE = \"SET_ACTIVE_PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_DISABLED = \"TOGGLE_DISABLED\";\r\n\r\n\r\nlet initialState = {\r\n    peopleData: [],\r\n    pageSize: 10,\r\n    totalPeopleCount: 0,\r\n    activePage: 1,\r\n    isFetching: false,\r\n    disabled: []\r\n\r\n};\r\n\r\nconst peopleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                peopleData: updateObject(state.peopleData, action.id , \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                peopleData: updateObject(state.peopleData, action.id , \"id\", {followed: false})\r\n            }\r\n        case SET_PEOPLE:\r\n            return {\r\n                ...state,\r\n                peopleData: [...action.people_data]\r\n            }\r\n        case SET_PAGES_COUNT:\r\n            return {\r\n                ...state,\r\n                totalPeopleCount: action.count\r\n\r\n            }\r\n        case SET_ACTIVE_PAGE:\r\n            return {\r\n                ...state,\r\n                activePage: action.value\r\n\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.bool\r\n\r\n            }\r\n        case TOGGLE_DISABLED:\r\n            return {\r\n                ...state,\r\n                disabled: action.bool ? [...state.disabled, action.id] : [state.disabled.filter(id => id != action.id)]\r\n\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const accessFollow = (id) => {\r\n    return {\r\n        type: FOLLOW,\r\n        id\r\n    }\r\n}\r\nexport const accessUnfollow = (id) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        id\r\n    }\r\n}\r\nexport const setPeople = (people_data) => {\r\n    return {\r\n        type: SET_PEOPLE,\r\n        people_data\r\n    }\r\n}\r\nexport const setPagesCount = (count) => {\r\n    return {\r\n        type: SET_PAGES_COUNT,\r\n        count\r\n    }\r\n}\r\nexport const setActivePage = (value) => {\r\n    return {\r\n        type: SET_ACTIVE_PAGE,\r\n        value\r\n    }\r\n}\r\nexport const toggleIsFetching = (bool) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        bool\r\n    }\r\n}\r\nexport const toggleDisabled = (bool, id) => {\r\n    return {\r\n        type: TOGGLE_DISABLED,\r\n        bool,\r\n        id\r\n    }\r\n}\r\nexport const getUsers = (activePage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        const response = await usersAPI.getUsers(activePage, pageSize);\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setPeople(response.items))\r\n        dispatch(setPagesCount(response.totalCount))\r\n    }\r\n}\r\nconst accessFollowUnfollow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(toggleDisabled(true, id))\r\n    const response = await apiMethod;\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleDisabled(false, id))\r\n}\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        accessFollowUnfollow(dispatch, id, usersAPI.followUser(id), accessFollow)\r\n    }\r\n}\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        accessFollowUnfollow(dispatch, id, usersAPI.unfollowUser(id), accessUnfollow)\r\n    }\r\n}\r\nexport default peopleReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Aside_sidebar__Je0sC\",\"item\":\"Aside_item__2yvjh\",\"ico\":\"Aside_ico__1TucO\",\"link\":\"Aside_link__xF1bO\",\"title\":\"Aside_title__O7IOv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__hqJtR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__14IpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewPost_container__38s0F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3Ai3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FormsControls_input__2djaX\",\"inputError\":\"FormsControls_inputError__n-Qwv\",\"errorMessage\":\"FormsControls_errorMessage__x-6Ts\",\"textarea\":\"FormsControls_textarea__2upII\",\"textareaContainer\":\"FormsControls_textareaContainer__3C8ph\",\"textareaError\":\"FormsControls_textareaError__12_pN\",\"messageInput\":\"FormsControls_messageInput__2LhyU\",\"newMessageContainer\":\"FormsControls_newMessageContainer__4wyNc\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"66ac6b9a-22ef-4bd7-aad2-324b64bf3872\"},\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`);\r\n    },\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`);\r\n    },\r\n    getUser(id) {\r\n        return instance.get(`profile/${id}`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUser(id) {\r\n        return instance.get(`profile/${id}`);\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n    },\r\n    updateStatus(status){\r\n        debugger\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    uploadAvatar(ava){\r\n        const formData= new FormData();\r\n        formData.append(\"image\", ava)\r\n        return instance.put('profile/photo', formData, {headers: {'Content-Type': 'multipart/form-data'}})\r\n    },\r\n    updateContactInfo(profile){\r\n        return instance.put(`profile`, profile)\r\n    }\r\n\r\n}\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(\"auth/me\");\r\n    },\r\n    getMe(id) {\r\n        return instance.get(`profile/${id}`)\r\n    },\r\n    login(email, password, rememberMe= false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatSection\":\"Chat_chatSection__39xa8\",\"head\":\"Chat_head__rydHn\",\"headItem\":\"Chat_headItem__2hGwC\",\"backLink\":\"Chat_backLink__INfO7\",\"companionName\":\"Chat_companionName__ojwpy\",\"companionAva\":\"Chat_companionAva__vPaSu\",\"chatContainer\":\"Chat_chatContainer__37rwx\",\"messageContainer\":\"Chat_messageContainer__3Ice8\",\"newMessageContainer\":\"Chat_newMessageContainer__3cB01\",\"sendButton\":\"Chat_sendButton__6Q7g-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__WpzsM\",\"title\":\"Login_title__3sCBT\",\"loginForm\":\"Login_loginForm__oEXmK\",\"rememberMeInputContainer\":\"Login_rememberMeInputContainer__2RSrm\",\"rememberMeCheckbox\":\"Login_rememberMeCheckbox__2dmm9\",\"rememberMeText\":\"Login_rememberMeText__37feA\",\"input\":\"Login_input__30xJW\",\"buttonContainer\":\"Login_buttonContainer__3kEXt\",\"link\":\"Login_link__3t60A\",\"errorMessage\":\"Login_errorMessage__lw_uj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3LNh1\",\"personal\":\"Post_personal__1AhZz\",\"ava\":\"Post_ava__2Fd2N\",\"info\":\"Post_info__2TovZ\",\"author\":\"Post_author__bCQN8\",\"date\":\"Post_date__p61rA\",\"content\":\"Post_content__34gzL\",\"feedback\":\"Post_feedback__Wie6A\",\"like\":\"Post_like__1DBYl\",\"likeCounter\":\"Post_likeCounter__3RsBR\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {profileAPI} from \"../api/api\";\r\nimport {reset, stopSubmit} from \"redux-form\";\r\nimport {parseError} from \"../utilits/help-functions/reducersHelpFunctions\";\r\n\r\nconst ADD_NEW_POST = \"ADD_NEW_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_CONTACTS_EDIT_MODE = \"TOGGLE_CHANGE_CONTACTS_EDIT_MODE\";\r\nconst UPLOAD_AVATAR_SUCCESS = \"UPLOAD_AVATAR_SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {\r\n            id: 1,\r\n            name: 'Bodrov Sergey',\r\n            text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. A ad, alias animi architecto beatae esse ipsa laborum minima necessitatibus nesciunt nihil odio officia placeat quisquam repellendus rerum sint voluptatum! Commodi dicta dignissimos distinctio earum esse, est eveniet facere iste laboriosam quas repellendus, sit voluptatibus! Adipisci, architecto autem, commodi, consequatur culpa cum itaque laudantium minima nesciunt nobis quas rem sequi veniam? Ad cupiditate deleniti explicabo libero odit? Aut dolor, dolore fugit nihil odio possimus qui quisquam tempora velit? A animi assumenda consequuntur corporis cumque deserunt dolorem eaque enim est excepturi magnam maxime minima molestiae, nisi, odio pariatur possimus provident quibusdam quis quod repudiandae sint totam ut veniam voluptatum? Amet animi, aperiam commodi cum cumque, delectus deleniti dignissimos dolorem enim eum explicabo facilis impedit iste labore laboriosam libero magni maxime minus nemo nihil nisi nulla provident quam quisquam reiciendis sed sint soluta tempora tenetur totam vel veniam vitae voluptatum. Ab accusantium alias amet commodi delectus doloribus eos exercitationem fuga hic inventore itaque laboriosam, molestias neque nostrum nulla odio optio pariatur perspiciatis porro praesentium quae quod rem totam? Aliquam amet, beatae dicta doloribus eaque earum, error, eveniet facilis ipsa ipsum maiores natus nobis obcaecati possimus quaerat quod ratione recusandae repellat sed tempore vel!',\r\n            likes: '280'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Bodrov Sergey',\r\n            text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. A ad, alias animi architecto beatae esse ipsa laborum minima necessitatibus nesciunt nihil odio officia placeat quisquam repellendus rerum sint voluptatum! Commodi dicta dignissimos distinctio earum esse, est eveniet facere iste laboriosam quas repellendus, sit voluptatibus! Adipisci, architecto autem, commodi, consequatur culpa cum itaque laudantium minima nesciunt nobis quas rem sequi veniam? Ad cupiditate deleniti explicabo libero odit? Aut dolor, dolore fugit nihil odio possimus qui quisquam tempora velit? A animi assumenda consequuntur corporis cumque deserunt dolorem eaque enim est excepturi magnam maxime minima molestiae, nisi, odio pariatur possimus provident quibusdam quis quod repudiandae sint totam ut veniam voluptatum? Amet animi',\r\n            likes: '10'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Bodrov Sergey',\r\n            text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. A ad, alias animi architecto beatae esse ipsa laborum minima necessitatibus nesciunt nihil odio officia placeat quisquam repellendus rerum sint voluptatum! Commodi dicta dignissimos distinctio earum esse, est eveniet facere iste laboriosam ',\r\n            likes: '40'\r\n        }\r\n    ],\r\n    profile: null,\r\n    isFetching: false,\r\n    status: \"\",\r\n    contactsEditMode: false\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST:\r\n            let newPost = {\r\n                id: 4,\r\n                name: 'Bodrov Sergey',\r\n                text: action.post,\r\n                likes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postData: [newPost, ...state.postData],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.bool\r\n\r\n            }\r\n        case TOGGLE_CONTACTS_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                contactsEditMode: action.bool\r\n\r\n            }\r\n        case UPLOAD_AVATAR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.ava}\r\n\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPost = (post) => {\r\n    return {\r\n        type: ADD_NEW_POST,\r\n        post\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\nexport const setUserStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (bool) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        bool\r\n    }\r\n}\r\nexport const toggleContactsEditModeSuccess = (bool) => {\r\n    return {\r\n        type: TOGGLE_CONTACTS_EDIT_MODE,\r\n        bool\r\n    }\r\n}\r\nexport const uploadAvatarSuccess = (ava) => {\r\n    return {\r\n        type: UPLOAD_AVATAR_SUCCESS,\r\n        ava\r\n    }\r\n}\r\nexport const getUser = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        const response = await profileAPI.getUser(id);\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUserProfile(response.data))\r\n    }\r\n\r\n}\r\nexport const getStatus = (id) => {\r\n    return async (dispatch) => {\r\n        const response = await profileAPI.getStatus(id)\r\n        dispatch(setUserStatus(response.data))\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        const response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status))\r\n        }\r\n\r\n    }\r\n}\r\nexport const uploadAvatar = (ava) => {\r\n    return async (dispatch) => {\r\n        const response = await profileAPI.uploadAvatar(ava)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(uploadAvatarSuccess(response.data.data.photos))\r\n        }\r\n\r\n    }\r\n}\r\nexport const updateContactInfo = (profile) => {\r\n    return async (dispatch, getState) => {\r\n        const id = getState().auth.userId;\r\n        const response = await profileAPI.updateContactInfo(profile)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(toggleContactsEditMode(false));\r\n            dispatch(getUser(id))\r\n        } else{\r\n            const error = parseError(response.data.messages[0]);\r\n            dispatch(stopSubmit(\"contactInfo\", {...error}));\r\n        }\r\n\r\n    }\r\n}\r\nexport const updateWithNewPost = (post) => {\r\n    return (dispatch) => {\r\n        dispatch(addPost(post));\r\n        dispatch(reset('newPost'));\r\n    }\r\n}\r\nexport const toggleContactsEditMode = (bool) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleContactsEditModeSuccess(bool));\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;\r\n","import {reset} from \"redux-form\";\r\n\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {\r\n            id: '1',\r\n            name: 'Ivan Ivanov',\r\n            lastMessageContext: 'Hi, how are you?',\r\n            lastMessageDate: \"08.04.2021\",\r\n            unreadNum: '2'\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'Julia Samoylova',\r\n            lastMessageContext: 'What r u doing?',\r\n            lastMessageDate: \"08.04.2021\",\r\n            unreadNum: '10'\r\n        },\r\n        {\r\n            id: '3',\r\n            name: 'Ivan Abramov',\r\n            lastMessageContext: 'Great',\r\n            lastMessageDate: \"08.04.2021\",\r\n            unreadNum: '4'\r\n        },\r\n        {\r\n            id: '4',\r\n            name: 'Max Semenov',\r\n            lastMessageContext: 'And you?',\r\n            lastMessageDate: \"08.04.2021\",\r\n            unreadNum: '1'\r\n        },\r\n        {id: '5', name: 'Petr Petrov', lastMessageContext: 'Me', lastMessageDate: \"08.04.2021\", unreadNum: '0'}\r\n    ],\r\n    chatData: [\r\n        {\r\n            date: '',\r\n            text: 'hi',\r\n            sender: '2',\r\n        },\r\n        {\r\n            date: '',\r\n            text: 'hello',\r\n            sender: '1',\r\n        },\r\n        {\r\n            date: '',\r\n            text: 'how is your react studying?',\r\n            sender: '2',\r\n        },\r\n        {\r\n            date: '',\r\n            text: 'is`s good, thanks',\r\n            sender: '1',\r\n        },\r\n\r\n    ]\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let message = {\r\n                date: '',\r\n                text: action.message,\r\n                sender: '1',\r\n            }\r\n            return  {\r\n                ...state,\r\n                chatData: [...state.chatData, message]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const sendMessage = (message) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        message\r\n    }\r\n}\r\nexport const updateWithNewMessage = (message) => {\r\n    return (dispatch) => {\r\n        dispatch(sendMessage(message));\r\n        dispatch(reset('newMessage'));\r\n    }\r\n}\r\n\r\n\r\nexport default messagesReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = \"SET_AUTH_USER_DATA\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_AUTH = \"TOGGLE_IS_AUTH\";\r\nconst SET_CARD = \"SET_CARD\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    card: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.bool\r\n\r\n            }\r\n        case TOGGLE_IS_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.bool\r\n\r\n            }\r\n        case SET_CARD:\r\n            return {\r\n                ...state,\r\n                card: action.card\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (bool) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        bool\r\n    }\r\n}\r\nexport const toggleIsAuth = (bool) => {\r\n    return {\r\n        type: TOGGLE_IS_AUTH,\r\n        bool\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login) => {\r\n    return {\r\n        type: SET_AUTH_USER_DATA,\r\n        data: {userId, email, login}\r\n    }\r\n}\r\nexport const setCard = (card) => {\r\n    return {\r\n        type: SET_CARD,\r\n        card\r\n    }\r\n}\r\nexport const authMe = () => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    const response = await authAPI.authMe();\r\n    dispatch(setAuthUserData(response.data.data.id, response.data.data.email, response.data.data.login));\r\n    if (response.data.resultCode === 1) {\r\n        dispatch(toggleIsFetching(false))\r\n    } else {\r\n        const responseGetMe = await authAPI.getMe(response.data.data.id);\r\n        dispatch(setCard(responseGetMe.data));\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(toggleIsAuth(true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        const response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(authMe())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Not reserved error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        const response = await authAPI.logout();\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(setAuthUserData(null, null, null));\r\n            dispatch(toggleIsAuth(false));\r\n            dispatch(setCard(null));\r\n            dispatch(toggleIsFetching(false));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import {authMe} from \"./auth-reducer\";\r\n\r\nconst TOGGLE_INITIALIZED = \"TOGGLE_INITIALIZED\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const toggleInitialized = () => {\r\n    return {\r\n        type: TOGGLE_INITIALIZED,\r\n    }\r\n}\r\nexport const initialize = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authMe());\r\n        Promise.all([promise]).then(()=>{\r\n            dispatch(toggleInitialized())\r\n        });\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport peopleReducer from \"./people-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    peoplePage: peopleReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store =createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/Message.bbfaa137.svg\";","export default __webpack_public_path__ + \"static/media/News.a7255fc8.svg\";","export default __webpack_public_path__ + \"static/media/Settings.0b120df2.svg\";","export default __webpack_public_path__ + \"static/media/Music.39b99780.svg\";","export default __webpack_public_path__ + \"static/media/People.1e9c04d6.svg\";","import React from \"react\";\r\nimport profileImage from '../../Icons/Profile.svg';\r\nimport messageImage from '../../Icons/Message.svg';\r\nimport newsImage from '../../Icons/News.svg';\r\nimport settingsImage from '../../Icons/Settings.svg';\r\nimport musicImage from '../../Icons/Music.svg';\r\nimport peopleImage from '../../Icons/People.svg';\r\n\r\nimport s from './Aside.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Aside = () => {\r\n    return <aside className={s.sidebar}>\r\n        <nav>\r\n            <ul>\r\n                <li className={s.item}><NavLink className={s.link} to={`/profile`}><img src={profileImage} className={s.ico}/><span className={s.title}>Profile</span></NavLink></li>\r\n                <li className={s.item}><NavLink className={s.link} to={\"/messages\"}><img src={messageImage} className={s.ico}/><span className={s.title}>Messages</span></NavLink></li>\r\n                <li className={s.item}><NavLink className={s.link} to={\"/news\"}><img src={newsImage} className={s.ico}/><span className={s.title}>News</span></NavLink></li>\r\n                <li className={s.item}><NavLink className={s.link} to={\"/people\"}><img src={peopleImage} className={s.ico}/><span className={s.title}>People</span></NavLink></li>\r\n                <li className={s.item}><NavLink className={s.link} to={\"/music\"}><img src={musicImage} className={s.ico}/><span className={s.title}>Music</span></NavLink></li>\r\n                <li className={s.item}><NavLink className={s.link} to={\"/settings\"}><img src={settingsImage} className={s.ico}/><span className={s.title}>Settings</span></NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    </aside>\r\n\r\n}\r\nexport default Aside;\r\n","import React from \"react\";\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <section>\r\n            news\r\n        </section>\r\n    )\r\n}\r\nexport default News;","import React from \"react\";\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <section>\r\n            settings\r\n        </section>\r\n    )\r\n}\r\nexport default Settings;","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    let nameClass, containerClass;\r\n    if (props.sender == 1) {\r\n        nameClass = s.myMessage;\r\n        containerClass = s.myMessageContainer\r\n    } else {\r\n        nameClass = s.friendMessage;\r\n        containerClass  = s.friendMessageContainer\r\n    }\r\n    return (\r\n        <div className={s.messageContainer}>\r\n            <div className={nameClass}>\r\n                {props.text}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\n\r\nexport const TextareaNewPost = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.textareaContainer}>\r\n            <textarea className={s.textarea + ` ` + (hasError ? s.textareaError : \"\")} {...props} {...input} />\r\n            {hasError && <p className={s.errorMessage}>{meta.error}</p>}\r\n        </div>\r\n\r\n)\r\n}\r\nexport const TextareaNewMessage = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.newMessageContainer}>\r\n            <textarea className={s.messageInput + ` ` + (hasError ? s.textareaError : \"\")} {...props} {...input} />\r\n            {hasError && <p className={s.errorMessage}>{meta.error}</p>}\r\n        </div>\r\n\r\n)\r\n}\r\nexport const TextareaProfileInfo = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.profileInfoContainer}>\r\n            <textarea className={s.profileInfo + ` ` + (hasError ? s.textareaError : \"\")} {...props} {...input} />\r\n            {hasError && <p className={s.errorMessage}>{meta.error}</p>}\r\n        </div>\r\n\r\n)\r\n}\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <>\r\n            <div>\r\n                <input className={s.input + ` ` + (hasError ? s.inputError : \"\")} {...props} {...input}/>\r\n            </div>\r\n            {hasError && <p className={s.errorMessage}>{meta.error}</p>}\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const required = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return \"Field is required\";\r\n}\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength){\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Button.module.css\"\r\n\r\nconst Button = (props)=>{\r\n    let verticalPadding = props.verticalPadding, horizontalPadding= props.horizontalPadding;\r\n\r\n    if (!props.verticalPadding){\r\n        verticalPadding = 8;\r\n        horizontalPadding = 16;\r\n    }\r\n    return <button className={s.button} style={{paddingTop: `${verticalPadding}px`, paddingBottom: `${verticalPadding}px`, paddingLeft: `${horizontalPadding}px`, paddingRight: `${horizontalPadding}px`}}>{props.value}</button>\r\n}\r\n\r\nexport default Button;","import s from \"./Chat.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {TextareaNewMessage} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLength} from \"../../../utilits/validators/validators\";\r\nimport Button from \"../../common/Button/Button\";\r\n\r\nconst maxLength100 = maxLength(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.newMessageContainer}>\r\n            <Field component={TextareaNewMessage} validate={[maxLength100]} name={\"message\"} placeholder={\"Message...\"}/>\r\n            <div className={s.sendButton}><Button value={\"Send\"} /></div>\r\n        </form>)\r\n};\r\nexport const AddMessageFormRedux = reduxForm({form: \"newMessage\"})(AddMessageForm);","import React from \"react\";\r\nimport s from './Chat.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport baseAva from '../../../Icons/Profile.svg';\r\nimport Message from \"./Message/Message\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm\";\r\n\r\nconst Chat = (props) => {\r\n    let messages = props.chatData.map(p => <Message text={p.text} dete={p.date} sender={p.sender}/>);\r\n    let addNewMessage = (text) => {\r\n        props.updateWithNewMessage(text.message);\r\n    };\r\n\r\n    return (\r\n        <section className={s.chatSection}>\r\n            <div className={s.head}>\r\n                <NavLink to={'/messages'} className={s.headItem}>\r\n                    <p className={s.backLink}>Back</p>\r\n                </NavLink>\r\n                <div className={s.headItem}>\r\n                    <h1 className={s.companionName}>Ivan Ivanov</h1>\r\n                </div>\r\n                <div className={s.headItem}>\r\n                    <img className={s.companionAva} src={baseAva}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.chatContainer}>\r\n                <div className={s.messageContainer}>\r\n                    {messages}\r\n                </div>\r\n\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport {updateWithNewMessage} from \"../../../redux/messages-reducer\";\r\nimport Chat from \"./Chat\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        chatData: state.messagesPage.chatData,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {updateWithNewMessage})(Chat);","import React from \"react\";\r\nimport s from './Dialog.module.css';\r\nimport baseAva from '../../../Icons/Profile.svg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    let counterUnread = s.counterUnread_active\r\n    if (props.unreadNum == 0) {\r\n        counterUnread = s.counterUnread;\r\n    }\r\n    return (\r\n        <NavLink to={'/messages/chat/' + props.id} className={s.container}>\r\n            <img src={baseAva} className={s.ava}/>\r\n            <div className={s.personal}>\r\n                <h2 className={s.name}>{props.name}</h2>\r\n                <span className={s.date}>{props.date}</span>\r\n                <p className={s.preview}>{props.lastMessage}</p>\r\n                <button className={counterUnread}>{props.unreadNum}</button>\r\n            </div>\r\n\r\n        </NavLink>\r\n    )\r\n}\r\nexport default Dialog;","import React from \"react\";\r\nimport s from './Messages.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\n\r\n\r\nconst Messages = (props) => {\r\n    let messagesItem = props.messagesData.map(d => <Dialog key={d.id} name={d.name} lastMessage={d.lastMessageContext} date={d.lastMessageDate} unreadNum={d.unreadNum} id={d.id}/>)\r\n    return (\r\n        <section className={s.messages}>\r\n            {messagesItem}\r\n        </section>\r\n    )\r\n}\r\nexport default Messages;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {return <Redirect to={\"/login\"} />}\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectAuthRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectAuthRedirect;\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesData: state.messagesPage.messagesData\r\n    }\r\n}\r\n\r\n\r\nexport default compose(withAuthRedirect,connect(mapStateToProps, {}))(Messages);","import React from \"react\";\r\nimport s from \"./NewPost.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextareaNewPost} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLength} from \"../../../utilits/validators/validators\";\r\nimport Button from \"../../common/Button/Button\";\r\n\r\nconst maxLength1000 = maxLength(1000);\r\nconst NewPost = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit} className={s.container}>\r\n            <Field component={TextareaNewPost} validate={[maxLength1000]} placeholder={\"What`s new for today?\"} name={\"newPostText\"}/>\r\n            <Button value={\"Send\"} />\r\n    </form>\r\n}\r\nexport const NewPostReduxForm = reduxForm({form: \"newPost\"})(NewPost);","import React from \"react\";\r\nimport {updateWithNewPost} from \"../../../redux/profile-reducer\";\r\nimport {NewPostReduxForm} from \"./NewPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    postData: state.profilePage.postData\r\n})\r\n\r\nconst NewPostContainer = (props)=>{\r\n    let addNewMessage = (text) => {\r\n        props.updateWithNewPost(text.newPostText);\r\n    };\r\n    return <NewPostReduxForm onSubmit={addNewMessage} />\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateWithNewPost})(NewPostContainer);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/Avatar.c5edef80.jpg\";","export default __webpack_public_path__ + \"static/media/like.665ede1a.svg\";","import React from \"react\";\r\nimport s from './Post.module.css';\r\nimport ava from '../../../../Icons/Avatar.jpg';\r\nimport like from '../../../../Icons/like.svg';\r\n\r\nconst Post = (props) => {\r\n    return <div className={s.post}>\r\n        <div className={s.personal}>\r\n            <img className={s.ava} src={ava}/>\r\n            <div className={s.info}>\r\n                <h3 className={s.author}>{props.name}</h3>\r\n                <span className={s.date}>05.04.2021</span>\r\n            </div>\r\n\r\n        </div>\r\n        <div className={s.content}>\r\n            {props.text}\r\n        </div>\r\n        <div className={s.feedback}>\r\n            <img src={like} className={s.like}/>\r\n            <span className={s.likeCounter}>{props.likes}</span>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport s from './Posts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst Posts = (props) => {\r\n    let postElements = props.postData.map(p => <Post key={p.id} name={p.name} text={p.text} likes={p.likes}/>);\r\n\r\n    return (\r\n        <section className={s.posts}>\r\n            <h2 className={s.title}>\r\n                My posts\r\n            </h2>\r\n            <div className={s.container}>\r\n                {postElements}\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\nexport default Posts;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData\r\n    }\r\n}\r\n\r\nlet PostsContainer = connect(mapStateToProps, {})(Posts)\r\n\r\nexport default PostsContainer;","import React, {useEffect, useState} from \"react\";\r\nimport s from '../Badge.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = ()=>{\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode=()=>{\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    useEffect(()=>{setStatus(props.status)},[props.status])\r\n\r\n    if (props.isOwner) {\r\n        return (\r\n            <section>\r\n                {editMode?\r\n                    <div>\r\n                        <input autoFocus={true} onBlur={deactivateEditMode} className={s.inputStatus}\r\n                               value={status} onChange={onStatusChange}/>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <p onClick={activateEditMode} className={s.status}>{props.status}</p>\r\n                    </div>\r\n                }\r\n            </section>\r\n        )\r\n    } else{\r\n        return (\r\n            <div>\r\n                <p onClick={activateEditMode} className={s.status}>{props.status}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport s from \"./../Badge.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, TextareaProfileInfo} from \"../../../common/FormsControls/FormsControls\";\r\nimport Button from \"../../../common/Button/Button\";\r\n\r\nconst ContactInfo = (props) => {\r\n\r\n\r\n    return <form onSubmit={props.handleSubmit} className={s.infoContainer}>\r\n        <div className={s.contactContainer}>\r\n        <Field className={s.itemInput} placeholder={\"Full Name\"} component={Input} name={\"fullName\"}/>\r\n        </div>\r\n        {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contact key={key} contactLabel={key}/>\r\n        })}\r\n        <div className={s.contactContainer}>\r\n            <div className={s.itemPoint}>Are you looking for a job?</div>\r\n            <div className={s.itemPoint}>\r\n                <Field className={s.checkboxProfileInfo} component={\"input\"} type={\"checkbox\"} name={\"lookingForAJob\"}/>\r\n                <span className={s.checkboxDescription}>Yes</span>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={s.contactContainer}>\r\n            <div className={s.itemPoint}>Job looking status:</div>\r\n            <Field className={s.itemInput} placeholder={\"Job looking status\"} component={Input}\r\n                   name={\"lookingForAJobDescription\"}/>\r\n        </div>\r\n        <div className={s.aboutMeLabel}>About me:</div>\r\n        <Field placeholder={\"aboutMe\"} className={s.aboutMeTextarea} component={TextareaProfileInfo} name={\"aboutMe\"}/>\r\n        <div className={s.buttonSubmitContainer}><Button value={\"Save\"}/></div>\r\n        <div className={s.errorMessage}>\r\n            {props.error? props.error: \"\"}\r\n        </div>\r\n    </form>\r\n\r\n}\r\n\r\nconst Contact = ({contactLabel}) => {\r\n    return <div className={s.contactContainer}>\r\n        <div className={s.itemPoint}>{contactLabel+\":\"}</div>\r\n        <Field className={s.itemInput} placeholder={contactLabel} component={Input} name={\"contacts.\" + contactLabel}/>\r\n    </div>\r\n}\r\n\r\nexport const ContactInfoForm = reduxForm({form: \"contactInfo\"})(ContactInfo)","import React, {useState} from \"react\";\r\nimport s from './Badge.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport baseAva from '../../../Icons/Profile.svg'\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport {toggleContactsEditMode} from \"../../../redux/profile-reducer\";\r\nimport {ContactInfoForm} from \"./ContactInfo/ContactInfo\";\r\n\r\nconst Badge =React.memo((props) => {\r\n    window.scrollTo(0, 0)\r\n\r\n    const onAvaSelected = (e)=>{\r\n        e.target.files.length && props.uploadAvatar(e.target.files[0]);\r\n    }\r\n\r\n    const toggleEditMode = ()=>{\r\n        props.toggleContactsEditMode(!props.contactsEditMode)\r\n    }\r\n\r\n\r\n    const httpConcater = (profile, key)=>{\r\n        return  profile.contacts[key][0]+profile.contacts[key][1]+profile.contacts[key][2]!=\"htt\"?\r\n            \"http://\"+profile.contacts[key]:profile.contacts[key]\r\n    }\r\n\r\n    if (!props.isFetching && props.profile) {\r\n\r\n        return <section className={s.badge}>\r\n            <div className={s.avaContainer}><img src={props.profile.photos.large || baseAva} className={s.ava}/>\r\n            {props.isOwner && props.contactsEditMode && <div><label htmlFor={\"avaUploader\"} className={s.addAvaLabel}>Add new avatar</label><input className={s.addAva}  id={\"avaUploader\"} type={\"file\"} onChange={onAvaSelected}/>\r\n                </div>}</div>\r\n\r\n            <div className={s.personal}>\r\n                {!props.contactsEditMode && <h1 className={s.name}>{props.profile.fullName}</h1>}\r\n                <ProfileStatus isOwner={props.isOwner} status={props.status} updateStatus={props.updateStatus} />\r\n                {!props.contactsEditMode?\r\n                <div className={s.infoContainer}>\r\n                        {Object.keys(props.profile.contacts).filter(key=>{return props.profile.contacts[key] && key })\r\n                            .map(key=>{\r\n                            return <Contact contactTitle={key} contactValue={httpConcater(props.profile, key)}  key={key} />\r\n                        })}\r\n                    <ul className={s.contactContainer}>\r\n                        <li className={s.itemPoint}>Job looking status:</li>\r\n                        <li className={s.itemPoint}>{props.profile.lookingForAJobDescription || \"Not looking for a job\"}</li>\r\n                    </ul>\r\n                    {props.profile.aboutMe && <ul className={s.contactContainer}>\r\n                        <li className={s.itemPoint}>About me:</li>\r\n                        <li className={s.itemPoint}>{props.profile.aboutMe}</li>\r\n                    </ul>}\r\n\r\n                </div>: <ContactInfoForm initialValues={props.profile} profile={props.profile} onSubmit={props.onSubmitContacts}/>}\r\n                {props.isOwner && !props.contactsEditMode && <div className={s.changeProfileButton} onClick={toggleEditMode}>Change profile</div>}\r\n            </div>\r\n        </section>\r\n    } else {\r\n        return <div className={s.preloaderContainer}><Preloader height={90}/></div>\r\n    }\r\n\r\n})\r\nconst Contact = ({contactTitle, contactValue})=>{\r\n    return<ul className={s.contactContainer}> <li className={s.itemPoint}>{contactTitle+\":\"}</li>\r\n        <li className={s.itemPoint}><a className={s.links} href={contactValue} target={\"_blank\"}>click</a> </li></ul>\r\n\r\n}\r\n\r\n\r\n\r\nexport default Badge;","import React from \"react\";\r\nimport Badge from \"./Badge\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    toggleContactsEditMode,\r\n    updateContactInfo,\r\n    updateStatus,\r\n    uploadAvatar\r\n} from \"../../../redux/profile-reducer\";\r\n\r\nconst BadgeContainer = (props) => {\r\n    const onSubmitContacts = (formData)=>{\r\n        props.updateContactInfo(formData);\r\n    }\r\n\r\n    return <Badge contactsEditMode={props.contactsEditMode}\r\n                  toggleContactsEditMode={props.toggleContactsEditMode}\r\n                  uploadAvatar={props.uploadAvatar}\r\n                  profile={props.profile}\r\n                  isOwner={props.isOwner}\r\n                  isFetching={props.isFetching}\r\n                  status={props.status}\r\n                  updateStatus={props.updateStatus}\r\n                  onSubmitContacts={onSubmitContacts}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    isFetching: state.profilePage.isFetching,\r\n    isAuth: state.auth.isAuth,\r\n    status: state.profilePage.status,\r\n    contactsEditMode: state.profilePage.contactsEditMode\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateStatus, uploadAvatar, toggleContactsEditMode, updateContactInfo\r\n})(BadgeContainer)","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport NewPostContainer from \"./NewPost/NewPostContainer\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport BadgeContainer from \"./Badge/BadgeContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <section>\r\n        <BadgeContainer isOwner={props.isOwner}/>\r\n        {props.isOwner && <NewPostContainer />}\r\n        <PostsContainer />\r\n    </section>\r\n\r\n}\r\nexport default Profile;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport s from './Profile.module.css'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatus,\r\n    getUser,\r\n    toggleContactsEditMode,\r\n    updateStatus,\r\n    uploadAvatar\r\n} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nconst ProfileContainer = (props) => {\r\n    useEffect(() => {updateComponent()},[props.match.params.userId, props.myProfileId]);\r\n\r\n    const updateComponent = () => {\r\n        let userId = props.match.params.userId;\r\n        if (!userId) {\r\n            userId = props.myProfileId;\r\n        }\r\n        if (userId) {\r\n            props.getUser(userId);\r\n            props.getStatus(userId);\r\n        }\r\n    }\r\n    if (!props.match.params.userId && !props.isAuth) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n    return <Profile isOwner={!props.match.params.userId || props.match.params.userId==props.myProfileId} />\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    myProfileId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUser, getStatus\r\n    }), withRouter)(ProfileContainer)\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/Main-logo.967ee1b0.svg\";","import React, {useState} from \"react\";\r\nimport s from \"../Header.module.css\";\r\nimport baseAva from \"../../../Icons/Profile.svg\";\r\n\r\nconst UserAuthInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    const toggleEditMode = () => {\r\n        editMode ? setEditMode(false) : setEditMode(true);\r\n    }\r\n\r\n    if (props.card) {\r\n        return <div className={s.userInfo} onMouseEnter={toggleEditMode} onMouseLeave={toggleEditMode}>\r\n            <h2 className={s.fullName}>{props.card.fullName}</h2>\r\n            <img className={s.userAva} src={props.card.photos.small ? props.card.photos.small : baseAva}/>\r\n            {editMode ? <div>\r\n                <div className={s.logout} onClick={props.logout} >Logout</div>\r\n            </div> : <></>}\r\n        </div>\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\nexport default UserAuthInfo;\r\n","import React from \"react\";\r\nimport mainLogo from \"../../Icons/Main-logo.svg\"\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport UserAuthInfo from \"./UserAuthInfo/UserAuthInfo\";\r\nimport Button from \"../common/Button/Button\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src={mainLogo} alt={\"logo\"} className={s.img}/>\r\n        <div className={s.loginBlock}>\r\n            { (props.isAuth) ?\r\n                <UserAuthInfo logout={props.logout} card={props.card} />\r\n                :\r\n                <>{props.isFetching ? <Preloader height={30} />: <NavLink to={\"/login\"}>\r\n                        <Button value={\"Login\"} />\r\n                    </NavLink>}</>}\r\n\r\n\r\n        </div>\r\n    </header>\r\n\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} logout={this.props.logout} userId={this.props.userId} card={this.props.card}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    card: state.auth.card,\r\n    isFetching: state.auth.isFetching\r\n})\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n;\r\n","import React from \"react\";\r\nimport s from \"./Login.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utilits/validators/validators.js\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport Button from \"../common/Button/Button\";\r\n\r\nconst Login = (props) => {\r\n    return (\r\n\r\n        <form className={s.loginForm} onSubmit={props.handleSubmit}>\r\n            <Field validate={[required]} placeholder={\"Login\"} component={Input} name={\"login\"}/>\r\n            <Field validate={[required]} className={s.input} placeholder={\"Password\"} type={\"password\"} component={Input} name={\"password\"}/>\r\n            <div className={s.rememberMeInputContainer}>\r\n                <Field className={s.rememberMeCheckbox} component={\"input\"} name={\"rememberMe\"}\r\n                       type={\"checkbox\"}/>\r\n                <p className={s.rememberMeText}>Remember me</p>\r\n            </div>\r\n            <div className={s.errorMessage}>\r\n            {props.error? props.error: \"\"}\r\n            </div>\r\n            <div className={s.buttonContainer}>\r\n                <Button value={\"Sign in\"} />\r\n                <a href={\"https://social-network.samuraijs.com/signUp\"} target={\"_blank\"} className={s.link}>No account? Sign up</a>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(Login)\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginReduxForm} from \"./Login\";\r\nimport s from \"./Login.module.css\"\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nconst LoginContainer = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.login, formData.password, formData.rememberMe )\r\n    }\r\n    if (props.isAuth){\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <section className={s.loginWrapper}>\r\n            <h1 className={s.title}>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </section>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {login, logout}), withRouter)(LoginContainer)\r\n","import React from \"react\";\nimport './App.css';\nimport './zeroing.css'\nimport Aside from \"./komponents/Aside/Aside\";\nimport {BrowserRouter, HashRouter, Route, withRouter} from \"react-router-dom\";\nimport News from \"./komponents/News/News\";\nimport Settings from \"./komponents/Settings/Settings\";\nimport ChatContainer from \"./komponents/Messages/Chat/ChatContainer\";\nimport MessagesContainer from \"./komponents/Messages/MessagesContainer\";\nimport ProfileContainer from \"./komponents/Profile/ProfileContainer\";\nimport HeaderContainer from \"./komponents/Header/HeaderContainer\";\nimport LoginContainer from \"./komponents/Login/LoginContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialize} from \"./redux/app-reducer\";\nimport Preloader from \"./komponents/common/Preloader/Preloader\";\nimport store from \"./redux/redux-state\";\nconst PeopleContainer = React.lazy( () => import(\"./komponents/People/PeopleContainer\"));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initialize()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <div className={\"backWrapper\"}>\n                <Preloader/>\n            </div>\n        }\n        return (\n            <div className={\"wrapper\"}>\n                <HeaderContainer/>\n                <Aside/>\n                <main className={\"main\"}>\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route exact path='/messages' render={() => <MessagesContainer/>}/>\n                    <Route exact path='/login' render={() => <LoginContainer/>}/>\n                    <Route path='/messages/chat' render={() => <ChatContainer/>}/>\n                    <Route path='/people' render={() =><React.Suspense fallback={<Preloader />}><PeopleContainer/></React.Suspense>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n\n                </main>\n\n\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n})\nconst AppContainer = compose(withRouter, connect(mapStateToProps, {initialize}))(App);\n\nconst GlobalApp = ()=>{\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\nexport default GlobalApp;\n","import React from \"react\";\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-state\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport GlobalApp from \"./App\";\n\n\nReactDOM.render(\n        <GlobalApp />,\n    document.getElementById('root')\n);\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/Profile.81d7b418.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2lVts\",\"img\":\"Header_img__KVWh2\",\"loginBlock\":\"Header_loginBlock__1vXk9\",\"userInfo\":\"Header_userInfo__3OAXl\",\"fullName\":\"Header_fullName__3iPFd\",\"userAva\":\"Header_userAva__1PNCd\",\"logout\":\"Header_logout__2rTys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialog_container__2Jv2o\",\"ava\":\"Dialog_ava__22uFX\",\"personal\":\"Dialog_personal__3DN1T\",\"name\":\"Dialog_name__3WNkh\",\"date\":\"Dialog_date__1E5Q0\",\"preview\":\"Dialog_preview__2Itpz\",\"counterUnread_active\":\"Dialog_counterUnread_active__1MCV4\",\"counterUnread\":\"Dialog_counterUnread__3Od-t\"};","export default __webpack_public_path__ + \"static/media/download-anim.44fe423f.svg\";","import React from \"react\";\r\nimport s from './Preloader.module.css'\r\nimport preloader from '../../../Icons/download-anim.svg'\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n            <img src={preloader} className={s.preloader} style={{height: props.height} }/>\r\n    )\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Message_messageContainer__3SMon\",\"myMessage\":\"Message_myMessage__1G6r3\",\"friendMessage\":\"Message_friendMessage__23o3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"Badge_badge__1S57F\",\"ava\":\"Badge_ava__25rb7\",\"personal\":\"Badge_personal__2yhK_\",\"name\":\"Badge_name__vn8Ly\",\"status\":\"Badge_status__3Cley\",\"changeProfileButton\":\"Badge_changeProfileButton__vVgKW\",\"inputStatus\":\"Badge_inputStatus__3DIq4\",\"infoContainer\":\"Badge_infoContainer__2MQzI\",\"contactContainer\":\"Badge_contactContainer__3qOo4\",\"itemPoint\":\"Badge_itemPoint__3P5T7\",\"itemInput\":\"Badge_itemInput__2Fywu\",\"links\":\"Badge_links__298Tm\",\"itemAnswer\":\"Badge_itemAnswer__2huXn\",\"list\":\"Badge_list__2TlH4\",\"preloaderContainer\":\"Badge_preloaderContainer__2OdK-\",\"buttonSubmitContainer\":\"Badge_buttonSubmitContainer__iQLpT\",\"checkboxProfileInfo\":\"Badge_checkboxProfileInfo__2pRKw\",\"aboutMeTextarea\":\"Badge_aboutMeTextarea__386ga\",\"aboutMeLabel\":\"Badge_aboutMeLabel__1v_8D\",\"errorMessage\":\"Badge_errorMessage__irxuj\",\"addAvaLabel\":\"Badge_addAvaLabel__25MD0\",\"avaContainer\":\"Badge_avaContainer__2Yzyq\",\"addAva\":\"Badge_addAva__VZGcU\"};","export const updateObject = (item, actionValue, objPropName, valueObj  ) => {\r\n\r\n    return item.map(u => {\r\n        if (u[objPropName] === actionValue) {\r\n            return {...u, ...valueObj};\r\n        }\r\n\r\n        return u;\r\n    })\r\n\r\n}\r\n\r\nexport const parseError = (error=\"The AboutMe field is required. (AboutMe)\")=>{\r\n    let errorContent='';\r\n    let result = '';\r\n    let isInContacts = false;\r\n    const firstBracket = error.indexOf('(');\r\n    for (let i = 0; i<firstBracket-1; i++){\r\n        errorContent+=error[i];\r\n    }\r\n    if(error.includes(\"->\")) {\r\n        error = error.toLowerCase();\r\n        isInContacts = true;\r\n        const arrowPosition = error.indexOf('->');\r\n        const length = error.length;\r\n        for (let i = arrowPosition + 2; i < length - 1; i++) {\r\n            result += error[i];\r\n        }\r\n    } else {\r\n        let counter = 0;\r\n\r\n        const secondBracket = error.indexOf(')');\r\n        for(let i=firstBracket+1; i<secondBracket; i++) {\r\n            counter===0? result= error[i].toLowerCase():\r\n            result +=error[i];\r\n            counter+=1;\r\n        }\r\n\r\n    }\r\n    let object={};\r\n    if(isInContacts){\r\n        object.contacts = {};\r\n        object.contacts[result] = errorContent;\r\n    } else{\r\n        object[result] = errorContent;\r\n    }\r\n    return object;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__Tg1NS\",\"title\":\"Posts_title__21csR\",\"container\":\"Posts_container__2aCEm\"};"],"sourceRoot":""}